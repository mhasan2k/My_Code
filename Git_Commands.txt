# check git version:

git --version

# github config:

git config --global user.name "Mahmud Hasan"
git config --global user.email "mhasanusa@hotmail.com"

git config --list

#### VS Code: use this code in Windows CMD, to check the VS Code editor
code --help	

git config --global core.editor "code --wait"  (worked)

##git config --global core.editor "'C:\Program Files\Microsoft VS Code\Code.exe' -w" (not tested)

## follwoing line will open .gitconfig file in the VSCode.
git config --global -e

## create a new repository on the command line

echo "# My_Code" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/mhasan2k/My_Code.git
git push -u origin master


## push an existing repository from the command line

git remote add origin https://github.com/mhasan2k/My_Code.git
git push -u origin master


## Tutorials:

# git help:

git help <verb>
git help config
or
git <verb> --help
git confit --help

# removing project from git
rm -rf .git

# add project into git again
git init

# create .gitignore for ignoring files or folder
touch .gitingnore

# Add file/s to staging area:
git add -A      # -A for add all files
git status

# removing file from staging
git reset <filename>
or
git reset       # will remove everything

# using commit to save to repository
git add -A
git commit -m "initial Commit"
git status 
git log     # will provide hash number and etc

# Cloning a remote repo:
git clone <url> <where to clone>
git clone ../remote_repo.git .      # . will clone into current directory

# viewing information about remote repo:
git remote -v
git branch -a   # to see all existing branches

# to see the diferences with remote repo:
git diff

# push to remote repo:
git pull origin master  # get the latest if there is any changes from other developer
git push origin master

## common workflow for git:
# create a branch for desired feature:
git branch              # will show all local branches
git branch calc-divide
git checkout calc-divide    # to start using this branch

git add -A
git commit -m "new comment"

# after committing push branch to remote:
git push -u origin calc-divide
git branch -a

# step to merge calc-divide brance to master branch
git checkout master
git pull origin master
git branch --merged     # will show the branch status
git merge calc-divide
git push origin master

# deleting a branch
git branch --merged         # will show the branch status
git branch -d calc-divide   # delete the branch localy
git branch -a
git push origin --delete calc-divide # delete the branch in remote repo

# END




